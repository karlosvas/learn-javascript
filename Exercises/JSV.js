//const { count } = require("console");

/*Merge Two Sorted Lists - JSV - NÃ­vel de dificultad - Easy
Se proporciona la clase ListNode. No la modifiques o cambies.
class ListNode {
    constructor(val) {
        this.val = val;
        this.next = null;
    }
}
La clase ListNode se usa para crear una estructura de datos llamada "Lista enlazada" (linked list en inglÃ©s).
Â¿QuÃ© debes hacer?
Se te dan los encabezados de dos listas enlazadas ordenadas list1 y list2.Combinar las dos listas en una lista ordenada.
La lista debe hacerse empalmando los nodos de las dos primeras listas.Devuelve el encabezado de la lista enlazada fusionada.

Ejemplo 1 :
Input: list1 = [1,2,4], list2 = [1,3,4]
Output: [1,1,2,3,4,4]

Ejemplo 2:
Input: list1 = [], list2 = []
Output: []

Ejemplo 3:
Input: list1 = [], list2 = [0]
Output: [0]

Restricciones:
ðŸ”´ El nÃºmero de nodos en ambas listas estÃ¡ en el rango [0, 50]. 
ðŸ”´ -100 <= Node.val <= 100
ðŸ”´ Tanto list1 como list2 se ordenan en orden no decreciente.
*/

class ListNode {
    constructor(val) {
        this.val = val;
        this.next = null;
    }
}
function mergeTwoLists(list1, list2) {
    let x = new ListNode(list1);
    x.next = list2;
    resultado = [];
    for (i = 0; i < list1.length; i++){
        resultado.push(x.val[i]);
        resultado.push(x.next[i]);
    }
    return resultado
}
console.log(mergeTwoLists([1,2,4],[1,3,4]));